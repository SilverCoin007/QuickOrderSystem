@using QuickOrderSystemAdminApp.Data;
@using QuickOrderSystemClassLibrary.Enum;
@using QuickOrderSystemClassLibrary;
@inject PopUpService PopupService
@inject ProductService ProductService

<div class="container">
    @* @if (CrudType != CrudTyp.Delete)
    {
        <div class="form-group">
            <label for="ID">ID</label>
            <input type="text" class="form-control" id="ID" @bind="ProductModel.ID" readonly="@(CrudType == CrudTyp.Read)">
        </div>
        <div class="form-group">
            <label for="name">Name</label>
            <input type="text" class="form-control" id="name" @bind="ProductModel.name" readonly="@(CrudType == CrudTyp.Read)">
        </div>
        <div class="form-group">
            <label for="description">Description</label>
            <input type="text" class="form-control" id="description" @bind="ProductModel.description" readonly="@(CrudType == CrudTyp.Read)">
        </div>
    }

    <div class="button-group" style="position: sticky; bottom: 0; text-align: center;">
        @if (CrudType == CrudTyp.Create)
        {
            <button class="btn btn-primary" @onclick="HandleSave">Create</button>
            <button class="btn btn-secondary" @onclick="ClosePopup">Cancel</button>
        }
        else if (CrudType == CrudTyp.Read)
        {
            <button class="btn btn-danger">Delete</button>
            <button class="btn btn-secondary" @onclick="ClosePopup">Close</button>
        }
        else if (CrudType == CrudTyp.Update)
        {
            <button class="btn btn-primary" @onclick="HandleSave">Edit</button>
            <button class="btn btn-secondary" @onclick="ClosePopup">Cancel</button>
        }
        else if (CrudType == CrudTyp.Delete)
        {
            <p>Are you sure you want to delete this entry?</p>
            <button class="btn btn-danger" @onclick="HandleDelete">Yes</button>
            <button class="btn btn-secondary" @onclick="ClosePopup">No</button>
        }
    </div> *@
</div>
<button @onclick="ClosePopup">Schließe das Popup</button>



@code {
    // [Parameter] public CrudTyp CrudType { get; set; }
    // [Parameter] public Product ProductModel { get; set; }

    // private async Task HandleSave()
    // {
    //     if (CrudType == CrudTyp.Create)
    //     {
    //         await ProductService.CreateAsync(ProductModel);
    //     }
    //     else if (CrudType == CrudTyp.Update)
    //     {
    //         await ProductService.UpdateAsync(ProductModel.ID, ProductModel);
    //     }
    // }

    // private async Task HandleDelete()
    // {
    //     if (CrudType == CrudTyp.Delete)
    //     {
    //         await ProductService.DeleteAsync(ProductModel.ID);
    //     }
    // }

    private void ClosePopup()
    {
        PopupService.Close();
    }
}

<style>
    
</style>
